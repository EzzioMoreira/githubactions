name: Build, Tag e Push da imagem para reposit√≥rio ECR
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  ECR_REPOSITORY: metalcorp
  CLUSTER_CDC: "arn::us-east-1:12345678:amazon-msk-cdc"
  HOSTNAME_CDC: "cluster-msk-cdc-prd"

jobs:
  build-push:
    runs-on: ubuntu-20.04
    name: Build ECR image
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image cluster cdc
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        CLUSTER_ARN: ${{ env.CLUSTER_CDC }}
        HOSTNAME_LABEL: ${{ env.HOSTNAME_CDC }}
      run: |
        echo $CDC_TAG
        envsubst '$CLUSTER_ARN,$HOSTNAME_LABEL' < exemple_conf.yaml > ./conf.yaml
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$(echo $HOST${GITHUB_SHA} | cut -c1-8) .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$(echo $HOSTNAME_CDC-${GITHUB_SHA} | cut -c1-8)

