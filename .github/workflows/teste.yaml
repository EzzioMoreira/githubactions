name: CI Metal Corp

on:
  push:
    branches:
      - "main"
  workflow_dispatch:
    
jobs:
  teste:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go: [ '1.15', '1.16', '1.17' ]
    name: Go ${{ matrix.go }} teste execução
    steps:
      - uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - run: go run hello.go

  build:
    runs-on: ubuntu-latest
    needs: [teste]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: metalcorp
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$(echo ${GITHUB_SHA} | cut -c1-8) .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$(echo ${GITHUB_SHA} | cut -c1-8)
  deploy:
    runs-on: ubuntu-latest
    needs: [teste, build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          TERRAFORM_VERSION: "1.0.0"
        run: |
          export TAG_IMAGE=`echo ${GITHUB_SHA} | cut -c1-8`
          envsubst < ./template/containers_definitions.json > ./iac/containers_definitions.json
          docker run --rm -v $PWD:/app -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -w /app/ --entrypoint "" hashicorp/terraform:$TERRAFORM_VERSION sh -c 'terraform -chdir=iac init'
          docker run --rm -v $PWD:/app -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -w /app/ --entrypoint "" hashicorp/terraform:$TERRAFORM_VERSION sh -c 'terraform -chdir=iac plan'
          docker run --rm -v $PWD:/app -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -w /app/ --entrypoint "" hashicorp/terraform:$TERRAFORM_VERSION sh -c 'terraform -chdir=iac apply -auto-approve'